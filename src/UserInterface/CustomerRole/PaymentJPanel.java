/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.Invoice.Invoice;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Payment.Payment;
import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FinancialAccount.AmazonFinancialAccount;
import Business.Network.Network;
import Business.Organization.AmazonFinanceOrganization;
import Business.Organization.AmazonOrderManagementOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AmazonOrderProcessRequest;
import Business.WorkQueue.AmazonPaymentValidationRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * 
 */
public class PaymentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewParticularInvoiceJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;
    private Order tempOrder;
    private Invoice tempInvoice;
    private Customer customerPerson;
    private Organization organization;
    //private PaymentHistory paymentHistory;
    
    public PaymentJPanel(JPanel userProcessContainer, Invoice tempInvoice,Order tempOrder, Customer customerPerson, UserAccount account ,EcoSystem system, Organization org){
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.tempOrder = tempOrder;
        this.account = account;
        this.tempInvoice = tempInvoice;
        this.customerPerson = customerPerson;
        this.organization = org;
        populatePaymentComboBox();
        
        countryJTextField.setText(customerPerson.getCountry());
        stateJTextField.setText(customerPerson.getState());
        cityJTextField.setText(customerPerson.getCity());
        
    }

     

     private void populatePaymentComboBox() {
        cardjComboBox.removeAllItems();
        cardjComboBox.addItem(Payment.Credit);
        cardjComboBox.addItem(Payment.Debit);
    }
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backjButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cardjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cardNojTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        exDatejTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cvvJTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        payDateJTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        amountJTextField = new javax.swing.JTextField();
        paymentjButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        addJTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        add1JTextField = new javax.swing.JTextField();
        zipcodeJTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        pnJTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        proceedToPaymentjButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        countryJTextField = new javax.swing.JTextField();
        stateJTextField = new javax.swing.JTextField();
        cityJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        summaryJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Order Details :-");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 23, 89, 20));

        backjButton2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        backjButton2.setText("<<Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });
        add(backjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 600, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cardjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Select Mode of Payment :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Enter Card Number :");

        cardNojTextField.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Enter Expiration Date :");

        exDatejTextField.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Enter CVV Number :");

        cvvJTextField.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Date of Payment :");

        payDateJTextField.setEditable(false);
        payDateJTextField.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Amount Payable :");

        amountJTextField.setEditable(false);
        amountJTextField.setEnabled(false);

        paymentjButton.setText("Make Payment");
        paymentjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentjButtonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Enter Card Details :");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 165, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(72, 72, 72)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(cardNojTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(cardjComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(exDatejTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(cvvJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(payDateJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, amountJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(136, 136, 136)
                        .add(jLabel17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(145, 145, 145)
                        .add(paymentjButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 165, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel17)
                .add(33, 33, 33)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cardjComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(cardNojTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(exDatejTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(cvvJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(payDateJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(amountJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 41, Short.MAX_VALUE)
                .add(paymentjButton)
                .add(31, 31, 31))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, 470, 330));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Select Shipping Address :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Enter Street Address Line 1 :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Enter Street Address Line 2 :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Enter Zipcode :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Enter Phone Number :");

        proceedToPaymentjButton.setText(" Proceed to Payment >>");
        proceedToPaymentjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedToPaymentjButtonActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Country :");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("State :");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("City :");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel14, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel13, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(zipcodeJTextField)
                            .add(add1JTextField)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, pnJTextField)
                            .add(addJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 273, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(24, 24, 24)
                                .add(jLabel19))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(cityJTextField)
                            .add(stateJTextField)
                            .add(countryJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 273, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(148, 148, 148)
                                .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(150, 150, 150)
                                .add(proceedToPaymentjButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .add(jPanel3Layout.createSequentialGroup()
                .add(186, 186, 186)
                .add(submitJButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 39, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel19)
                    .add(countryJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel21)
                    .add(stateJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel22)
                    .add(cityJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(addJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(add1JTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(zipcodeJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(pnJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel15))
                .add(33, 33, 33)
                .add(submitJButton)
                .add(29, 29, 29)
                .add(proceedToPaymentjButton)
                .add(65, 65, 65))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 530, 450));

        summaryJButton.setText("View Order Summary >>");
        summaryJButton.setEnabled(false);
        summaryJButton.setFocusPainted(false);
        summaryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryJButtonActionPerformed(evt);
            }
        });
        add(summaryJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 600, 220, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void paymentjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentjButtonActionPerformed
        // TODO add your handling code here:
         
         ArrayList<OrderItem> orderItemList =  tempOrder.getOrderItemList();
        for(OrderItem oi: orderItemList){
            oi.getProduct().setAvailability(oi.getProduct().getAvailability()- oi.getQuantity());
        }
        
         String cardType = (String) cardjComboBox.getSelectedItem();
         
         int cardNo = Integer.parseInt(cardNojTextField.getText());
         int cvv = Integer.parseInt(cvvJTextField.getText());
         String exDate = exDatejTextField.getText();
         String payDate = payDateJTextField.getText();
         float payAmount = Float.valueOf(amountJTextField.getText());
         tempInvoice.setInvoiceDate(payDate);
         tempInvoice.setStatus("PAID");
         tempInvoice.setOrder(tempOrder);
         
         
                                    AmazonFinanceOrganization org = null;
                                    AmazonOrderManagementOrganization omo = null;
                                    for (Organization organizationlist : system.getOrganizationDirectory().getOrganizationList()) {
                                        
                                        
                                        if (organizationlist instanceof AmazonOrderManagementOrganization) {
                                            omo = (AmazonOrderManagementOrganization) organizationlist;
                                            Order finalOrder = omo.getMasterOrderList().addOrder(tempOrder);
                                            
                                          
                                            tempOrder.setOrderDate(payDate);
                                            tempOrder.setCustomerPerson(account.getCustomer());
                                            System.err.println(tempOrder);
                                            
                                            AmazonOrderProcessRequest ordRequest = new AmazonOrderProcessRequest();
                                            ordRequest.setRequestDate(payDate);
                                            //ordRequest.setOrderId(finalOrder.getOrderId());
                                            ordRequest.setOrderValue(payAmount);
                                            ordRequest.setSender(account);
                                            ordRequest.setOrder(finalOrder);
                                            ordRequest.setStatus("Order Placed by Customer");
                                            ordRequest.setResult("Yet to Process");
                                            
                                            omo.getWorkQueue().getWorkRequestList().add(ordRequest);
                                            account.getWorkQueue().getWorkRequestList().add(ordRequest);
                                            
                                        }
                                        if (organizationlist instanceof AmazonFinanceOrganization) {
                                            org = (AmazonFinanceOrganization) organizationlist;
                                            Payment payment = org.getPh().makeAPayment(cardNo, cardType, exDate, cvv, payDate, payAmount);
                                            
                                           
                                            
                                            Invoice invoice = org.getId().addInvoice(tempInvoice);
                                            payment.setInvoice(invoice);
                                           // invoice.setOrder(tempOrder);
                                            tempInvoice.setInvoiceNo(invoice.getInvoiceNo());
                                            System.err.println("Inv No"+ invoice.getInvoiceNo());
                                            System.err.println("Invoice "+ payment.getInvoice().getInvoiceNo());
                                            
                                            System.err.println("::::: "+ invoice.getOrder().getOrderId());
                                            AmazonPaymentValidationRequest payRequest = new AmazonPaymentValidationRequest();
                                            payRequest.setRequestDate(payDate);
                                            //payRequest.setOrderId(finalOrder.getOrderId());
                                            payRequest.setInvoiceAmt(payAmount);
                                            payRequest.setSender(account);
                                            payRequest.setCustomer(account.getCustomer());
                                            payRequest.setAmazonFinancialAccount(org.getAmazonFinancialAccount());
                                            payRequest.setFinalInvoice(invoice);
                                            payRequest.setFinalPayment(payment);
                                            payRequest.setRequestDate(payDate);
                                            //payRequest.setOrder(finalOrder);
                                            payRequest.setStatus("Amount Paid by Customer");
                                            payRequest.setResult("Yet to Process");
                                            
                                            org.getWorkQueue().getWorkRequestList().add(payRequest);
                                            account.getWorkQueue().getWorkRequestList().add(payRequest);
                                         
                                        }
                             
                          }
    paymentjButton.setEnabled(false);
    summaryJButton.setEnabled(true);
    JOptionPane.showMessageDialog(null, "Congratulations!! You have successfully placed your order!!");
                               
             
    }//GEN-LAST:event_paymentjButtonActionPerformed

    private void proceedToPaymentjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedToPaymentjButtonActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
         //get current date time with Date()
         Date date = new Date();
         String dateString = dateFormat.format(date);
       
       int confirm = JOptionPane.showConfirmDialog(null, "Are you Sure you want to make Payment", "Warning", JOptionPane.YES_NO_OPTION );
         
       if (confirm == JOptionPane.YES_OPTION) 
        {
            amountJTextField.setEnabled(true);
            amountJTextField.setText(String.valueOf(tempInvoice.getTotalInvoiceAmount()));
            cardNojTextField.setEnabled(true);
            exDatejTextField.setEnabled(true);
            cvvJTextField.setEnabled(true);
            payDateJTextField.setEnabled(true);
            payDateJTextField.setText(String.valueOf(dateString));
            System.out.println(payDateJTextField.getText());
        }
    }//GEN-LAST:event_proceedToPaymentjButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
     //   JOptionPane.showMessageDialog(null,"Must select a row first", "warning", JOptionPane.WARNING_MESSAGE);//
        
        String countryName = countryJTextField.getText();
        String stateName = stateJTextField.getText();
        String cityName = cityJTextField.getText();
        

//                                int proceed = JOptionPane.showConfirmDialog(null, "Sorry! Same Day Delivery is not possible for the Shipping Address Mentioned. Do you want to proceed ?");
//
//                              if (proceed == 0) {
//                                    customerPerson.setAddress(addJTextField.getText());
//                                   customerPerson.setAddress1(add1JTextField.getText());
//                                   customerPerson.setZipcode(Integer.parseInt(zipcodeJTextField.getText()));
//                                   customerPerson.setPhoneNo(Integer.parseInt(pnJTextField.getText()));
//                                    break;
//                               }
    /*      Network network = system.getNetwork();
        for (Network country : network.getNetworkList()) {
            if (countryName.equalsIgnoreCase(country.getName())) {

                for (Network state : country.getNetworkList()) {
                    if (stateName.equalsIgnoreCase(state.getName())) {

                        for (Network city : state.getNetworkList()) {
                            if (cityName.equalsIgnoreCase(city.getName())) {

                                customerPerson.setAddress(addJTextField.getText());
                                customerPerson.setAddress1(add1JTextField.getText());
                                customerPerson.setZipcode(Integer.parseInt(zipcodeJTextField.getText()));
                                customerPerson.setPhoneNo(Integer.parseInt(pnJTextField.getText()));

                            } else {
                                int confirm = JOptionPane.showConfirmDialog(null, "Sorry! Same Day Delivery is not possible for the Shipping Address Mentioned. Do you want to proceed ?", "Warning", JOptionPane.YES_NO_OPTION);

                                if (confirm == JOptionPane.YES_OPTION) {
                                    customerPerson.setAddress(addJTextField.getText());
                                    customerPerson.setAddress1(add1JTextField.getText());
                                    customerPerson.setZipcode(Integer.parseInt(zipcodeJTextField.getText()));
                                    customerPerson.setPhoneNo(Integer.parseInt(pnJTextField.getText()));
                                }


                            }
                        }
                    }
                }
            }
        } */
        
        for (OrderItem item : tempOrder.getOrderItemList()) {
    
           Enterprise e = item.getEnterprise();
           String country = e.getEnterpriseCountry();
           String state = e.getEnterpriseState();
           String city = e.getEnterpriseCity();
            
            
            if(!(countryName.equalsIgnoreCase(country)&& stateName.equalsIgnoreCase(state)&& cityName.equalsIgnoreCase(city))){
               JOptionPane.showMessageDialog(null,"Same Day Delivery is not Possible for : "+item +" in the Region Mentioned", "Warning", JOptionPane.WARNING_MESSAGE);
               
           }
           
        }
        customerPerson.setAddress(addJTextField.getText());
        customerPerson.setAddress1(add1JTextField.getText());
        customerPerson.setZipcode(Integer.parseInt(zipcodeJTextField.getText()));
        customerPerson.setPhoneNo(Integer.parseInt(pnJTextField.getText()));

        
        
           
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void summaryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryJButtonActionPerformed
        // TODO add your handling code here:
        
        ViewOrderScreenJPanel vosjp = new ViewOrderScreenJPanel(userProcessContainer, account.getCustomer(), tempOrder,tempInvoice ,system);
        userProcessContainer.add("ViewOrderScreenJPanel", vosjp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_summaryJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField add1JTextField;
    private javax.swing.JTextField addJTextField;
    private javax.swing.JTextField amountJTextField;
    private javax.swing.JButton backjButton2;
    private javax.swing.JTextField cardNojTextField;
    private javax.swing.JComboBox cardjComboBox;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JTextField countryJTextField;
    private javax.swing.JTextField cvvJTextField;
    private javax.swing.JTextField exDatejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField payDateJTextField;
    private javax.swing.JButton paymentjButton;
    private javax.swing.JTextField pnJTextField;
    private javax.swing.JButton proceedToPaymentjButton;
    private javax.swing.JTextField stateJTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JButton summaryJButton;
    private javax.swing.JTextField zipcodeJTextField;
    // End of variables declaration//GEN-END:variables
}
