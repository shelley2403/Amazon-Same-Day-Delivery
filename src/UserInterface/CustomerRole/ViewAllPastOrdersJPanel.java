/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;


import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Invoice.Invoice;
import Business.Order.OrderItem;
import Business.Organization.AmazonFinanceOrganization;
import Business.Organization.AmazonOrderManagementOrganization;
import Business.Organization.Organization;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class ViewAllPastOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAllOrdersJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private Customer customer;
    public ViewAllPastOrdersJPanel(JPanel userProcessContainer, EcoSystem system,Customer customer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.customer = customer;
        
        refresh();
    }
    
    public void refresh() {
        DefaultTableModel model = (DefaultTableModel)customerJTable.getModel();
                                model.setRowCount(0);
        AmazonFinanceOrganization afo = null;
        for (Organization organization1 : system.getOrganizationDirectory().getOrganizationList()) {
            if (organization1 instanceof AmazonFinanceOrganization) {
                afo = (AmazonFinanceOrganization) organization1;
        ArrayList<Invoice> invoiceList = afo.getId().getInvoiceOfCustomer(customer);
        for (Invoice inv : invoiceList) {
            Object[] orderRow = new Object[5];
            orderRow[0] = inv;            
            orderRow[1] = inv.getOrder().getOrderId();
            orderRow[2] = inv.getTotalInvoiceAmount();
            orderRow[3] = inv.getStatus();
            orderRow[4] = inv.getInvoiceDate();
            ((DefaultTableModel) customerJTable.getModel()).addRow(orderRow);
        }
    }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerJTable = new javax.swing.JTable();
        backjButton2 = new javax.swing.JButton();
        refreshjButton1 = new javax.swing.JButton();
        viewjOrdersButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Order History :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 11, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        customerJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Invoice No.", "Order Id", "Bill Amount", "Status", "Date Of Purchase"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerJTable);
        customerJTable.getColumnModel().getColumn(0).setResizable(false);
        customerJTable.getColumnModel().getColumn(1).setResizable(false);
        customerJTable.getColumnModel().getColumn(2).setResizable(false);
        customerJTable.getColumnModel().getColumn(3).setResizable(false);
        customerJTable.getColumnModel().getColumn(4).setResizable(false);

        backjButton2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        backjButton2.setText("<<Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });

        refreshjButton1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        refreshjButton1.setText("Refresh");
        refreshjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButton1ActionPerformed(evt);
            }
        });

        viewjOrdersButton3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        viewjOrdersButton3.setText("View Particular Order ");
        viewjOrdersButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewjOrdersButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(refreshjButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(backjButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 437, Short.MAX_VALUE)
                        .addComponent(viewjOrdersButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(refreshjButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backjButton2)
                    .addComponent(viewjOrdersButton3))
                .addContainerGap())
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 46, 740, 300));

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Item Id", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 720, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void refreshjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButton1ActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshjButton1ActionPerformed

    private void viewjOrdersButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewjOrdersButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerJTable.getSelectedRow();
        if(selectedRow<=0)
        {
            JOptionPane.showMessageDialog(null, "Select a row first");
            return;
        }
        
//        if (selectedRow > -1) {
//        Invoice objInvoice = (Invoice) customerjTable1.getValueAt(selectedRow, 0);
//        ViewParticularInvoiceJPanel viewParticularOrderJPanel = new ViewParticularInvoiceJPanel(userProcessContainer, objInvoice);
//        userProcessContainer.add("ViewParticularOrder", viewParticularOrderJPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
//        }
        
        
        Invoice objInvoice = (Invoice)customerJTable.getValueAt(selectedRow, 0);
        
            DefaultTableModel dff = (DefaultTableModel) orderJTable.getModel();
            dff.setRowCount(0);
        

        for (OrderItem item : objInvoice.getOrder().getOrderItemList()) {
            Object[] orderRow = new Object[4];
            orderRow[0] = item;            
            orderRow[1] = item.getProduct().getProductId();
            orderRow[2] = item.getQuantity();
            orderRow[3] = item.getProduct().getSellingPrice();
            
            ((DefaultTableModel) orderJTable.getModel()).addRow(orderRow);
        }
    
        
        
        
        
        
        
        
    }//GEN-LAST:event_viewjOrdersButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton2;
    private javax.swing.JTable customerJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderJTable;
    private javax.swing.JButton refreshjButton1;
    private javax.swing.JButton viewjOrdersButton3;
    // End of variables declaration//GEN-END:variables
}
