/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplierOrderManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Order.OrderItem;
import Business.Organization.Organization;
import Business.Organization.PackagingOrganization;
import Business.Organization.SupplierOrderManagementOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PackagingRequest;
import Business.WorkQueue.SupplierOrderRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sony
 */
public class ViewAllMyOrdersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private EcoSystem system;
    private Enterprise enterprise;
    private UserAccount userAccount;
    /**
     * Creates new form ViewAllMyOrdersJPanel
     */
    public ViewAllMyOrdersJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.system = system;
        this.enterprise = enterprise;
        this.userAccount = account;
        sNameTextField.setText(enterprise.getName());
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

            SupplierOrderManagementOrganization somo = null;
        for (Organization organization1 : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization1 instanceof SupplierOrderManagementOrganization) {
                somo = (SupplierOrderManagementOrganization) organization1;

                for (WorkRequest request : somo.getWorkQueue().getWorkRequestList()) {
                    Object[] row = new Object[8];
                    request.setReceiver(userAccount);
                    
                    
                    row[0] = request.getSender().getEmployee().getName();
                    row[1] = request.getReceiver();
                    row[2] = ((SupplierOrderRequest) request);
                    row[3] = ((SupplierOrderRequest) request).getProductId();
                    row[4] = ((SupplierOrderRequest) request).getQuantity();
                    row[5]=  request.getRequestDate();
                    row[6] = request.getStatus();
                    row[7] = ((SupplierOrderRequest) request).getResult();
                    model.addRow(row);
                }
            }
        }
    }
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        sNameTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        viewOrderJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderjTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Order Id", "Product Id", "Quantity", "Order Date", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(6).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(7).setResizable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Enterprise:");

        sNameTextField.setEditable(false);
        sNameTextField.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        sNameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sNameTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(102, 102, 102), null, null));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewOrderJButton.setText("View Order");
        viewOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        orderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderjTable.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(orderjTable);

        submitJButton.setText("Submit Order to Packaging Department >>");
        submitJButton.setEnabled(false);
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(sNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(viewOrderJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(sNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(refreshJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewOrderJButton)
                    .addComponent(submitJButton))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(backJButton)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        ((CardLayout)userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select a Row First");
            return;
        }

        SupplierOrderRequest supRequest = (SupplierOrderRequest)workRequestJTable.getValueAt(selectedRow, 2);
//
        supRequest.setStatus("Processing");
//
//        ViewOrderDetailsJPanel vcJPanel = new ViewOrderDetailsJPanel(userProcessContainer,system ,userAccount,((SupplierOrderRequest) supRequest), organization, enterprise);
//        userProcessContainer.add("ViewCustomerOrderJPanel", vcJPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
        
        DefaultTableModel dff = (DefaultTableModel) orderjTable.getModel();
        dff.setRowCount(0);
        for (OrderItem item : supRequest.getFinalOrder().getOrderItemList()) {
                        if(item.getEnterprise().equals(enterprise)){
                        Object[] orderRow = new Object[3];
                        orderRow[0] = item;
                        orderRow[1] = item.getProduct().getSellingPrice();
                        orderRow[2] = (item.getProduct().getAvailability()+supRequest.getQuantity());
                       
                        dff.addRow(orderRow);
                    }
        }
        
        populateTable();
        submitJButton.setEnabled(true);
    }//GEN-LAST:event_viewOrderJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        //int selectRow = orderjTable.getSelectedRow();
        
        int selectedRow = workRequestJTable.getSelectedRow();
        SupplierOrderRequest supRequest = (SupplierOrderRequest)workRequestJTable.getValueAt(selectedRow, 2);
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a Row First");
            return;
        }

        for (OrderItem item : supRequest.getFinalOrder().getOrderItemList()){
            if (item.getEnterprise().equals(enterprise)){
        Enterprise e = item.getEnterprise();
        PackagingOrganization pmo = null;
        for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof PackagingOrganization) {
                pmo = (PackagingOrganization) org;

                PackagingRequest packRequest = new PackagingRequest();
                packRequest.setSender(userAccount);
                packRequest.setRequestDate(supRequest.getRequestDate());
                packRequest.setProductId(item.getProduct().getProductId());
                packRequest.setQuantity(item.getQuantity());
                packRequest.setCustomer(supRequest.getCustomer());
                packRequest.setStatus("Order Verified,Prepare for Packing");
                packRequest.setResult("Incomplete");
                packRequest.setOrder(supRequest.getFinalOrder());
                packRequest.setProductName(item.getProduct().getName());

                pmo.getWorkQueue().getWorkRequestList().add(packRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(packRequest);
            }
            }
        }
        }
        JOptionPane.showMessageDialog(null, "Your order is sent to Packaging Department !!!");
        supRequest.setResult("Order Sent to Packaging");
        supRequest.setStatus("Completed");
        
        populateTable();

    }//GEN-LAST:event_submitJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderjTable;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTextField sNameTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JButton viewOrderJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
