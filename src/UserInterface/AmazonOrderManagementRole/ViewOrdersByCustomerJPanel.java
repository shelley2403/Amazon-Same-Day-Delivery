/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AmazonOrderManagementRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Order.OrderItem;
import Business.Organization.AmazonOrderManagementOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrderManagementOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AmazonOrderProcessRequest;
import Business.WorkQueue.SupplierOrderRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ViewOrdersByCustomerJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public ViewOrdersByCustomerJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem system, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.system = system;
        this.organization = organization;
        this.enterprise = enterprise;
        populateTable();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        AmazonOrderManagementOrganization aomo = null;
        for (Organization organization1 : system.getOrganizationDirectory().getOrganizationList()) {
            if (organization1 instanceof AmazonOrderManagementOrganization) {
                aomo = (AmazonOrderManagementOrganization) organization1;

                
                
                for (WorkRequest request : aomo.getWorkQueue().getWorkRequestList()) {
                    
                    
                  
                    
                    
                    request.setReceiver(userAccount);
                    
                    Object[] row = new Object[7];
                    row[0] = request.getSender().getCustomer();
                    row[1] = request.getReceiver();
                    row[2] = ((AmazonOrderProcessRequest) request);
                    row[3] = request.getRequestDate();
                    row[4] = ((AmazonOrderProcessRequest) request).getOrderValue();
                    row[5] = request.getStatus();
                    row[6] = ((AmazonOrderProcessRequest) request).getResult();
                    
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        viewOrderJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderjTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Order Number", "Order Date", "Order Value", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        workRequestJTable.getColumnModel().getColumn(6).setResizable(false);

        viewOrderJButton.setText("View Order");
        viewOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        orderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Quantity", "Price", "Supplier", "Delivery Result", "Delivery Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderjTable.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(orderjTable);

        submitJButton.setText("Submit Order to Supplier>>");
        submitJButton.setEnabled(false);
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshJButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(viewOrderJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(refreshJButton)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitJButton)
                            .addComponent(viewOrderJButton))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderJButtonActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select a Row First");
            return;
        }
        
        
        AmazonOrderProcessRequest request = (AmazonOrderProcessRequest)workRequestJTable.getValueAt(selectedRow, 2);
        request.setStatus("Processing");
        

        DefaultTableModel dff = (DefaultTableModel) orderjTable.getModel();
        dff.setRowCount(0);
        for (OrderItem item : request.getOrder().getOrderItemList()) {
                        
                        Object[] orderRow = new Object[7];
                        orderRow[0] = item.getProduct().getProductId();
                        orderRow[1] = item;
                        orderRow[2] = item.getQuantity();
                        orderRow[3] = item.getProduct().getSellingPrice();
                        orderRow[4] = item.getEnterprise();
                        orderRow[5] = item.getDeliveryStatus();
                        orderRow[6] = item.getDeliveryDate();
                        dff.addRow(orderRow);
                    }
        
        populateTable();
        submitJButton.setEnabled(true);
        
    }//GEN-LAST:event_viewOrderJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        AmazonOrderProcessRequest request = (AmazonOrderProcessRequest)workRequestJTable.getValueAt(selectedRow, 2);
        int selectRow = orderjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a Row First");
            return;
        }

        for (OrderItem item : request.getOrder().getOrderItemList()){
        Enterprise e = item.getEnterprise();
        SupplierOrderManagementOrganization sorg = null;
        for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof SupplierOrderManagementOrganization) {
                sorg = (SupplierOrderManagementOrganization) org;

                sorg.getMasterOrderList().addOrder(request.getOrder());
                
                SupplierOrderRequest supRequest = new SupplierOrderRequest();
                supRequest.setSender(userAccount);
                supRequest.setRequestDate(request.getRequestDate());
                supRequest.setProductId(item.getProduct().getProductId());
                supRequest.setQuantity(item.getQuantity());
                supRequest.setFinalOrder(request.getOrder());
                supRequest.setCustomer(request.getSender().getCustomer());
                supRequest.setStatus("Order Placed by Customer");
                supRequest.setResult("Incomplete");
                supRequest.setProductName(item.getProduct().getName());

                sorg.getWorkQueue().getWorkRequestList().add(supRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(supRequest);
                
            }
        }
        }
        JOptionPane.showMessageDialog(null, "Your order is sent to their respective Supplier !!!");
        request.setResult("Order Sent to Respective Supplier");
        request.setStatus("Completed");

        populateTable();
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderjTable;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton submitJButton;
    private javax.swing.JButton viewOrderJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
