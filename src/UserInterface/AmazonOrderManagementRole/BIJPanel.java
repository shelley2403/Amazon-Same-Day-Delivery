/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AmazonOrderManagementRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.AmazonOrderManagementOrganization;
import Business.Organization.CustomerManagementOrganization;
import Business.Organization.InventoryManagementOrganization;
import Business.Organization.Organization;
import Business.ProductCatalog.Product;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author sony
 */
public class BIJPanel extends javax.swing.JPanel {
    
    
    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;

    /**
     * Creates new form BIJPanel
     */
    public BIJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system = system;
      
    }

    private int getTotalOrderForProduct(Product p){
    
        int totalProductQty = 0;
        AmazonOrderManagementOrganization aomo = null;
        
        for (Organization organization1 : system.getOrganizationDirectory().getOrganizationList()) {
            if (organization1 instanceof AmazonOrderManagementOrganization) {
                aomo = (AmazonOrderManagementOrganization) organization1;
            }
        }
        if (aomo != null) {
            for (Order order : aomo.getMasterOrderList().getOrderList()) {

                ArrayList<OrderItem> tempList = order.getOrderItemList();

                for (OrderItem oi : tempList) {
                    if (oi.getProduct().equals(p)){
                        totalProductQty += oi.getQuantity();
                    }
                }  
            }
        }
        return totalProductQty;
      }    
      
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bestCustomerJButton = new javax.swing.JButton();
        topSellingProductJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bestJTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        bestCustomerJButton.setText("Best Customer");
        bestCustomerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestCustomerJButtonActionPerformed(evt);
            }
        });

        topSellingProductJButton.setText("Top Selling Product");
        topSellingProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topSellingProductJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Result :");

        jButton1.setText("Delivery Statistics");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bestJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bestCustomerJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(topSellingProductJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(bestCustomerJButton)
                .addGap(40, 40, 40)
                .addComponent(topSellingProductJButton)
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bestJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bestCustomerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestCustomerJButtonActionPerformed
        // TODO add your handling code here:
        
        int totalSaleVolume = 0;
        int maxQty = 0;
        String bestCustomerPerson = "";
        AmazonOrderManagementOrganization aomo = null;
        CustomerManagementOrganization cmo = null;
            for (Organization organization1 : system.getOrganizationDirectory().getOrganizationList()) {
                if (organization1 instanceof AmazonOrderManagementOrganization) {
                      aomo = (AmazonOrderManagementOrganization) organization1;
                }
            }
                      
         for (Organization organization2 : system.getOrganizationDirectory().getOrganizationList()) {
                if (organization2 instanceof CustomerManagementOrganization){
                cmo = (CustomerManagementOrganization) organization2;
                }
         }
            
        
          if(cmo != null && aomo!=null){
              for (Customer customer: cmo.getCd().getCustomerList()){
                totalSaleVolume = 0;
                for(Order customerOrder: aomo.getMasterOrderList().getOrdersByCustomer(customer)){
                if(customerOrder!= null){
                ArrayList <OrderItem> tempList = customerOrder.getOrderItemList();
                for (OrderItem oi : tempList){            
                    totalSaleVolume = totalSaleVolume + oi.getQuantity();
                }
              if(maxQty < totalSaleVolume){
                    maxQty = totalSaleVolume ;  
                    bestCustomerPerson = customer.getFirstName();
                    
              }else if(maxQty == totalSaleVolume){
                    if(!("".equals(bestCustomerPerson))){              
                        bestCustomerPerson+= " and " + customer.getFirstName();
                    }
                        
                }
              }
            }        
           }          
          }        
          
              bestJTextField.setText(bestCustomerPerson);
          
    }//GEN-LAST:event_bestCustomerJButtonActionPerformed

    private void topSellingProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topSellingProductJButtonActionPerformed
        // TODO add your handling code here:
        
        int maxQty = 0;
        String maxP = "";
        String bestEnt = ""; 
        
        Network network = system.getNetwork();
        for (Network country : network.getNetworkList()) {
            
                for (Network state : country.getNetworkList()) {
                    
                        for (Network city : state.getNetworkList()) {
                            
                                for (Enterprise e : city.getEnterpriseDirectory().getEnterpriseList()) {
                                    
                                    InventoryManagementOrganization org = null;
                                    for (Organization organization1 : e.getOrganizationDirectory().getOrganizationList()) {
                                        if (organization1 instanceof InventoryManagementOrganization) {
                                            org = (InventoryManagementOrganization) organization1;                                            
                                            break;
                                        }
                                    }
                                    if (org != null) {
                                    for (Product pro : org.getPc().getProductList()) {
                                       if(maxQty < getTotalOrderForProduct(pro)){
                                            maxQty = getTotalOrderForProduct(pro) ;                                            
                                            maxP = pro.getName();
                                        }
                                       else if(maxQty == getTotalOrderForProduct(pro)){
                                           maxQty = getTotalOrderForProduct(pro);                                           
                                            if(!("".equals(maxP))){              
                                                maxP+= " and " + pro.getName();
                                            }
                                       }
                                }                                   
                             }
                            }
                        }
                    }
                   }
        bestJTextField.setText(maxP);
    
    }//GEN-LAST:event_topSellingProductJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bestCustomerJButton;
    private javax.swing.JTextField bestJTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton topSellingProductJButton;
    // End of variables declaration//GEN-END:variables
}
